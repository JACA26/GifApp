{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","CategoryValue","setCategoryValue","onSubmit","e","preventDefault","trim","length","alert","cats","type","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","gifFetch","category","a","encodeURI","fetch","resp","json","data","gifData","map","gif","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgData","setTimeout","useFetchGifs","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MA+CeA,MAzCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEQC,mBAAS,IAFjB,mBAE3BC,EAF2B,KAEZC,EAFY,KAqBlC,OAEI,sBAAMC,SAfW,SAACC,GAGlB,GAFAA,EAAEC,iBAECJ,EAAcK,OAAOC,QAAU,EAG9B,OAFAC,MAAM,sDACNN,EAAiB,IAIrBH,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAuBQ,OACzCP,EAAiB,KAKjB,SAEI,uBACIQ,KAAK,OACLC,YAAY,WACZC,MAAOX,EACPY,SAzBc,SAACT,GACvBF,EAAkBE,EAAEU,OAAOF,a,QCIpBG,MAbf,YAAmC,IAAbC,EAAY,EAAZA,MAAMC,EAAM,EAANA,IACxB,OAEI,sBAAKC,UAAU,6CAAf,UAEI,4BAAIF,IAEJ,qBAAKG,IAAKF,EAAKG,IAAKJ,Q,uBCTnBK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdN,EAFc,0FAE2EO,UAAUF,GAFrF,sBAIDG,MAAMR,GAJL,cAIdS,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAUD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAG1CkB,QAAQC,IAAIP,GAdQ,kBAebA,GAfa,4CAAH,sD,MCkDNQ,MA1Cf,YAA8B,IAAZf,EAAW,EAAXA,SAAW,ECJD,SAACA,GAAa,IAAD,EAEXtB,mBAAS,CAC/B4B,KAAM,GACNU,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAwBrC,OAjBAC,qBAAU,WAENpB,EAASC,GACJoB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLZ,KAAMe,EACNL,SAAS,MAGf,UAEX,CAAChB,IAGGiB,EDhBwBM,CAAavB,GAAhCW,EAJa,EAIlBL,KAAaU,EAJK,EAILA,QAGpB,OACI,qCACI,qBAAIpB,UAAU,wCAAd,+BAAyEI,EAAzE,OACCgB,GACG,qCACI,sBAAKpB,UAAU,eAAf,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,wBAEnB,mBAAGA,UAAU,aAAb,4BAIR,qBAAKA,UAAU,YAAf,SAEYe,EAAOH,KAAI,SAAAgB,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAId,aEJ1Be,MA/Bf,WAA0B,IAAD,EAEe/C,mBAAS,CAAC,aAFzB,mBAEdgD,EAFc,KAEFjD,EAFE,KAIrB,OAEI,eAAC,WAAD,WAEI,iDACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQiD,EAAWlB,KAAI,SAAAR,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjC2B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ca08500.chunk.js","sourcesContent":["/* *** IMPORTS *** */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\n/* *** BODY COMPONENT *** */\nfunction AddCategory({setCategories}) {\n    \n    const [CategoryValue, setCategoryValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setCategoryValue( e.target.value);\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if(CategoryValue.trim().length <= 2) {\n            alert('Inserte una categorÃ­a mayor a 2 caracteres')\n            setCategoryValue('');\n            return;\n        }\n        \n        setCategories(cats => [CategoryValue, ...cats]);\n        setCategoryValue('');\n    }\n    \n    return (\n        \n        <form onSubmit={handleSubmit}>\n            \n            <input \n                type=\"text\" \n                placeholder=\"Category\"\n                value={CategoryValue} \n                onChange={handleInputChange}\n            />\n            \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default AddCategory\n","import React from 'react'\n\nfunction GifGridItem({title,url}) {\n    return (\n        \n        <div className='card animate__animated animate__fadeInDown'>\n            \n            <p>{title}</p>\n            \n            <img src={url} alt={title} />\n            \n        </div>\n    )\n}\n\nexport default GifGridItem\n","export const gifFetch = async (category) => {\n    \n    const url = `https://api.giphy.com/v1/gifs/search?api_key=UWaoy6cb3wjKbatpPSHiyI6lzg4QZPI5&q=${encodeURI(category)}&limit=12`;\n    \n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifData = data.map(gif => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            url: gif.images?.downsized_medium.url\n        }\n    })\n    console.log(gifData);\n    return gifData;\n}","/* *** IMPORTS *** */\nimport React from 'react'\nimport GifGridItem from './GifGridItem';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nimport '../css/loader.css';\n\n\n/* *** BODY COMPONENT *** */\nfunction GifGrid({category}) {\n    \n    \n    //data:images se le da el alias de images para mejor manejo de variables\n    const {data:images, loading} = useFetchGifs(category);\n    \n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInDown\"> Resultados para: {category} </h3>\n            {loading && \n                <>\n                    <div className=\"sk-cube-grid\">\n                        <div className=\"sk-cube sk-cube1\"></div>\n                        <div className=\"sk-cube sk-cube2\"></div>\n                        <div className=\"sk-cube sk-cube3\"></div>\n                        <div className=\"sk-cube sk-cube4\"></div>\n                        <div className=\"sk-cube sk-cube5\"></div>\n                        <div className=\"sk-cube sk-cube6\"></div>\n                        <div className=\"sk-cube sk-cube7\"></div>\n                        <div className=\"sk-cube sk-cube8\"></div>\n                        <div className=\"sk-cube sk-cube9\"></div>\n                    </div>\n                    <p className=\"txt_loader\">Cargando...</p>\n                </>\n            }\n            \n            <div className='card-grid'>\n                    {\n                        images.map(img =>(\n                            <GifGridItem \n                                key={img.id}\n                                {...img}\n                            />\n                        ))\n                    }\n                    \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\";\nimport {gifFetch} from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) =>{\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    \n    useEffect(() => {\n        \n        gifFetch(category)\n            .then(imgData => {\n                \n                setTimeout(() => {\n                    \n                    setState({\n                        data: imgData,\n                        loading: false\n                    })\n                    \n                },2000)\n            })\n    }, [category]);\n    \n    \n    return state;\n}\n","import React, { Fragment, useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GiftExpertApp() {\n    \n    const [categories, setCategories] = useState(['Valorant']);\n    \n    return (\n        \n        <Fragment>\n            \n            <h2>Gift Expert App</h2>\n            <hr/>\n            \n            <AddCategory setCategories={setCategories} />\n            \n            <ol>\n                {\n                    categories.map(category => \n                        \n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                        \n                    )\n                }\n                \n            </ol>\n        </Fragment>\n        \n    )\n}\n\nexport default GiftExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './css/index.css';\n\n\nReactDOM.render(\n  \n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}